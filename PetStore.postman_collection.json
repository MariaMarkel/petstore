{
	"info": {
		"_postman_id": "b3cf2aaa-b4b2-479c-9c0d-0fd5f4aa02d2",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CREATE: Add a New Pet to Store",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"pet_id\", _.random(1, 5000));\r",
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"pet_name\", firstName);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true,
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": {{pet_id}},\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"{{pet_name}}\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}"
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "READ: Find Pet by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Pet id is correct\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"pet_id\"));\r",
							"});\r",
							"pm.test(\"Pet name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"pet_name\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE: Update an Existing Pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"category_id\", _.random(1,1000));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response ID the same as in environment\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"pet_id\"));\r",
							"});\r",
							"pm.test(\"Category name\", function () {\r",
							"    pm.expect(jsonData.category.name).to.eql(\"string\");\r",
							"});\r",
							"pm.test(\"Response category ID the same as in environment\", function () {\r",
							"    pm.expect(jsonData.category.id).to.eql(pm.environment.get(\"category_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{pet_id}},\r\n  \"category\": {\r\n    \"id\": {{category_id}},\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"cat\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"{{pet_name}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "READ: Confirm Updates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response ID the same as in environment\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"pet_id\"));\r",
							"});\r",
							"pm.test(\"Category name\", function () {\r",
							"    pm.expect(jsonData.category.name).to.eql(\"string\");\r",
							"});\r",
							"pm.test(\"Response category ID the same as in environment\", function () {\r",
							"    pm.expect(jsonData.category.id).to.eql(pm.environment.get(\"category_id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE: Update With Form Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Piper",
							"type": "text"
						},
						{
							"key": "status",
							"value": "sold",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "READ: Confirm Form Data Updates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Pet name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Piper\");\r",
							"});\r",
							"pm.test(\"Pet status is correct\", function () {\r",
							"    pm.expect(jsonData.status).to.eql(\"sold\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE: Upload Image",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "C:\\Users\\maria\\Postman\\files\\pet.png"
						}
					]
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}/uploadImage",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}",
						"uploadImage"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE: Delete Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{pet_id}},\r\n  \"category\": {\r\n    \"id\": {{category_id}},\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"cat\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"{{pet_name}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "READ: Confirm Pet Deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/{{pet_id}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"{{pet_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "READ: Find Pet by Status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Total available pets\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let confirm;\r",
							"    for (let pet of jsonData) {\r",
							"        if (pet.status === 'available') {confirm = true;\r",
							"    } else {confirm = false;\r",
							"           }\r",
							"    }\r",
							"    pm.expect(confirm).to.eq(true);\r",
							"    pm.environment.set(\"availablePets\", jsonData.length);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=available",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						}
					]
				}
			},
			"response": []
		}
	]
}